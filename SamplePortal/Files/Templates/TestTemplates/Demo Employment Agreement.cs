using System;using System.Reflection;using System.Diagnostics;using System.Runtime.InteropServices;using System.Text;using System.Collections.Generic;using System.ComponentModel;using System.Data.Services.Common;using System.Linq;using HotDocs.Server.Engine;[assembly: AssemblyTitle("HotDocs Compiled Template")][assembly: AssemblyCompany("HotDocs Limited")][assembly: AssemblyProduct("HotDocs Browser Interview")][assembly: AssemblyCopyright("Copyright © HotDocs Limited 1993 - 2013")][assembly: AssemblyTrademark("HotDocs® is a registered trademark of HotDocs Limited.")][assembly: ComVisible(false)][assembly: AssemblyVersion("6.5.0.0")][assembly: AssemblyFileVersion("6.5.0.0")]namespace HotDocs.Server.Tmpl_Demo_0020Employment_0020Agreement_002Edocx{public class Tmpl_Demo_0020Employment_0020Agreement_002Edocx{private IRuntime _rt;public Tmpl_Demo_0020Employment_0020Agreement_002Edocx(IRuntime runtime){_rt = runtime;}private void Noop(IValue val){}public void TemplateInterview(){TrueFalseValue condResult = TrueFalseValue.Unanswered;_rt.MergeVar("Employee Name");_rt.MergeVar("Agreement Date");_rt.MergeVar("Job Title");_rt.MergeVar("Start Date");_rt.MergeVar("Job Description");_rt.MergeVar("Employee Gender");_rt.PushUnans();condResult = _rt.GetVarValueAllowUnans<TrueFalseValue>("Employee to Complete Trial Period");_rt.PopUnans();if (condResult.IsAnswered){if (condResult.Value){_rt.PushUnans();Probation_0020End_0020Date_Script();_rt.PopUnans();}}_rt.PushUnans();condResult = _rt.GetVarValueAllowUnans<MultipleChoiceValue>("Employment Status") == new TextValue("Exempt");_rt.PopUnans();if (condResult.IsAnswered){if (condResult.Value){_rt.MergeVar("Annual Salary");}else{_rt.PushUnans();condResult = _rt.GetVarValueAllowUnans<MultipleChoiceValue>("Employment Status") == new TextValue("Non-exempt");_rt.PopUnans();if (condResult.IsAnswered){if (condResult.Value){_rt.MergeVar("Hourly Salary");_rt.PushUnans();Full_002Dtime_0020Annual_0020Salary_Script();_rt.PopUnans();}else{_rt.PushUnans();condResult = _rt.GetVarValueAllowUnans<MultipleChoiceValue>("Employment Status") == new TextValue("Part-time");_rt.PopUnans();if (condResult.IsAnswered){if (condResult.Value){_rt.MergeVar("Hourly Salary");_rt.PushUnans();Part_002Dtime_0020Annual_0020Salary_Script();_rt.PopUnans();}}}}}}_rt.MergeVar("Number of Vacation Days");_rt.PushUnans();condResult = _rt.GetVarValueAllowUnans<TrueFalseValue>("Employee to Receive Paid Seminar Days");_rt.PopUnans();if (condResult.IsAnswered){if (condResult.Value){_rt.MergeVar("Number of Seminar Days");}}_rt.MergeVar("Signature Date");_rt.MergeVar("Company Representative");}public void Job_0020Information_Script(params IValue[] vals){TrueFalseValue condResult = TrueFalseValue.Unanswered;Debug.Assert(vals.Length==0);_rt.PushScript("Job Information", ScriptType.Dialog);_rt.GrayVar("Number of Seminar Days", true);_rt.PushUnans();condResult = _rt.GetVarValueAllowUnans<TrueFalseValue>("Employee to Receive Paid Seminar Days");_rt.PopUnans();if (condResult.IsAnswered){if (condResult.Value){_rt.GrayVar("Number of Seminar Days", false);}}_rt.PopScript();}public DateValue Probation_0020End_0020Date_Script(params IValue[] vals){TrueFalseValue condResult = TrueFalseValue.Unanswered;Debug.Assert(vals.Length==0);DateValue result = DateValue.Unanswered;if (_rt.Unans) return result;_rt.PushScript("Probation End Date", ScriptType.Computation);_rt.PushUnans();result = _rt.DateOf(new NumberValue(1), _rt.MonthOf(_rt.GetVarValueAllowUnans<DateValue>("Start Date") + new TimeSpanValue(new NumberValue(6), Period.Months)), _rt.YearOf(_rt.GetVarValueAllowUnans<DateValue>("Start Date") + new TimeSpanValue(new NumberValue(6), Period.Months)));_rt.PopUnans();_rt.PopScript();return result;}public void Salary_0020and_0020Benefits_Script(params IValue[] vals){TrueFalseValue condResult = TrueFalseValue.Unanswered;Debug.Assert(vals.Length==0);_rt.PushScript("Salary and Benefits", ScriptType.Dialog);_rt.HideVar("Annual Salary", true);_rt.HideVar("Hourly Salary", true);_rt.PushUnans();condResult = _rt.GetVarValueAllowUnans<MultipleChoiceValue>("Employment Status") == new TextValue("Exempt");_rt.PopUnans();if (condResult.IsAnswered){if (condResult.Value){_rt.HideVar("Annual Salary", false);}else{_rt.PushUnans();condResult = _rt.LogicalOR(_rt.GetVarValueAllowUnans<MultipleChoiceValue>("Employment Status") == new TextValue("Non-exempt"), () => { return _rt.GetVarValueAllowUnans<MultipleChoiceValue>("Employment Status") == new TextValue("Part-time"); });_rt.PopUnans();if (condResult.IsAnswered){if (condResult.Value){_rt.HideVar("Hourly Salary", false);}}}}_rt.PopScript();}private NumberValue _Full_002Dtime_0020Annual_0020Salary_Sum = 0;public NumberValue Full_002Dtime_0020Annual_0020Salary_Sum(){return _Full_002Dtime_0020Annual_0020Salary_Sum;}public NumberValue Full_002Dtime_0020Annual_0020Salary_Script(params IValue[] vals){TrueFalseValue condResult = TrueFalseValue.Unanswered;Debug.Assert(vals.Length==0);NumberValue result = NumberValue.Unanswered;if (_rt.Unans) return result;_rt.PushScript("Full-time Annual Salary", ScriptType.Computation);if (_rt.InRpt && _rt.TopRptNdx <= 1){_Full_002Dtime_0020Annual_0020Salary_Sum = 0;}_rt.PushUnans();result = _rt.GetVarValueAllowUnans<NumberValue>("Hourly Salary") * new NumberValue(2080);_rt.PopUnans();if (_rt.InRpt){_Full_002Dtime_0020Annual_0020Salary_Sum += result;}_rt.PopScript();return result;}private NumberValue _Part_002Dtime_0020Annual_0020Salary_Sum = 0;public NumberValue Part_002Dtime_0020Annual_0020Salary_Sum(){return _Part_002Dtime_0020Annual_0020Salary_Sum;}public NumberValue Part_002Dtime_0020Annual_0020Salary_Script(params IValue[] vals){TrueFalseValue condResult = TrueFalseValue.Unanswered;Debug.Assert(vals.Length==0);NumberValue result = NumberValue.Unanswered;if (_rt.Unans) return result;_rt.PushScript("Part-time Annual Salary", ScriptType.Computation);if (_rt.InRpt && _rt.TopRptNdx <= 1){_Part_002Dtime_0020Annual_0020Salary_Sum = 0;}_rt.PushUnans();result = _rt.GetVarValueAllowUnans<NumberValue>("Hourly Salary") * new NumberValue(1040);_rt.PopUnans();if (_rt.InRpt){_Part_002Dtime_0020Annual_0020Salary_Sum += result;}_rt.PopScript();return result;}public string ComponentFileName{get { return "Demo Employment Agreement.cmp"; }}public Dictionary<string, Component> GetComponents(){Dictionary<string, Component> compDict = new Dictionary<string, Component>();Stack<List<IDialogItem>> stack = new Stack<List<IDialogItem>>();IDialogItem item;Preference pref;Format fmt;pref = new Preference("(TEMPLATE_ID)",null,"694f9b08-bc19-4db9-9773-cb03aa8f10c9");compDict.Add(pref.Name, pref);pref = new Preference("(MARK_ANSWER_FIELDS)",null,"True");compDict.Add(pref.Name, pref);{stack.Push(new List<IDialogItem>(2));item = new TextVariable("Employee Name",null,null,null,null,FieldWidth.Full,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,1,0,"",false);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new MultipleChoiceVariable("Employee Gender",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new OptionList(new List<Option>(2){new Option("Male",null,null),new Option("Female",null,null)}),MultipleChoiceStyle.RadioButtons,false,"",null);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new Dialog("Employee Information",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new DialogItemList(stack.Peek()),null,RepeatType.None,false,true,false,null,null,10,TrueFalseGroupType.None,false,PromptPosition.Top,true,12,true,false,false,true,new VariablePlacement[]{VariablePlacement.Default, VariablePlacement.Default},null,null);compDict.Add(item.Name, item as Component);stack.Pop();}{stack.Push(new List<IDialogItem>(3));item = new DateVariable("Agreement Date",null,null,null,null,FieldWidth.Full,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","____________",' ',0,MergeAlignment.Left);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new MultipleChoiceVariable("Company Representative",null,null,null,new Resource(ResourceType.Text, ResourceLocation.ResourcePane, new StaticTextEvaluator("Stephanie Hanson signs for editorial employees, Ed Walters for marketing, and Kim Schuster for production"), null),FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new OptionList(new List<Option>(3){new Option("Stephanie Hanson",null,null),new Option("Ed Walters",null,null),new Option("Kim Schuster",null,null)}),MultipleChoiceStyle.RadioButtons,false,"",null);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new DateVariable("Signature Date",null,null,new StaticTextEvaluator("Signature Date (Leave blank if unknown)"),null,FieldWidth.Calculated,-1,ColumnWidth.Calculated,0,true,true,false,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new Dialog("Agreement Information",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new DialogItemList(stack.Peek()),null,RepeatType.None,false,true,false,null,null,10,TrueFalseGroupType.None,false,PromptPosition.Top,true,12,true,false,false,true,new VariablePlacement[]{VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default},null,null);compDict.Add(item.Name, item as Component);stack.Pop();}{stack.Push(new List<IDialogItem>(7));item = new TextVariable("Job Title",null,null,null,null,FieldWidth.Full,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,1,0,"",false);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new TextVariable("Job Description",null,null,new StaticTextEvaluator("Complete the following sentence: Job duties shall include _______"),null,FieldWidth.Full,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,4,0,"",false);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new DateVariable("Start Date",null,null,null,null,FieldWidth.Full,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new TrueFalseVariable("Employee to Complete Trial Period",null,null,null,null,FieldWidth.Full,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,false);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new VerticalSpacingDialogElement("White Space",null,100);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new TrueFalseVariable("Employee to Receive Paid Seminar Days",null,null,null,null,FieldWidth.Full,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,false);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new NumberVariable("Number of Seminar Days",null,null,null,null,FieldWidth.Calculated,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,0,"",0.000000,5.000000);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new Dialog("Job Information",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new DialogItemList(stack.Peek()),new DialogScriptEvaluator(Job_0020Information_Script),RepeatType.None,false,true,false,null,null,10,TrueFalseGroupType.MultipleSelect,false,PromptPosition.Top,true,12,true,false,false,true,new VariablePlacement[]{VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default},null,null);compDict.Add(item.Name, item as Component);stack.Pop();}item = new ComputedVariable("Probation End Date",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new ComputationScriptEvaluator<DateValue>(Probation_0020End_0020Date_Script),null);compDict.Add(item.Name, item as Component);{stack.Push(new List<IDialogItem>(5));item = new MultipleChoiceVariable("Employment Status",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new OptionList(new List<Option>(3){new Option("Exempt",null,null),new Option("Non-exempt",null,null),new Option("Part-time",null,null)}),MultipleChoiceStyle.RadioButtonGrid,false,"",null);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new NumberVariable("Annual Salary",null,null,null,null,FieldWidth.Calculated,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,2,"$",0.000000,0.000000);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new NumberVariable("Hourly Salary",null,null,null,null,FieldWidth.Calculated,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,2,"$",0.000000,0.000000);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = compDict["White Space"] as IDialogItem;stack.Peek().Add(item);item = new NumberVariable("Number of Vacation Days",null,null,null,null,FieldWidth.Calculated,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,0,"",0.000000,0.000000);compDict.Add(item.Name, item as Component);stack.Peek().Add(item);item = new Dialog("Salary and Benefits",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new DialogItemList(stack.Peek()),new DialogScriptEvaluator(Salary_0020and_0020Benefits_Script),RepeatType.None,false,true,false,null,null,10,TrueFalseGroupType.None,false,PromptPosition.Top,true,12,true,false,false,true,new VariablePlacement[]{VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default, VariablePlacement.Default},null,null);compDict.Add(item.Name, item as Component);stack.Pop();}item = new ComputedVariable("Full-time Annual Salary",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new ComputationScriptEvaluator<NumberValue>(Full_002Dtime_0020Annual_0020Salary_Script),Full_002Dtime_0020Annual_0020Salary_Sum);compDict.Add(item.Name, item as Component);item = new ComputedVariable("Part-time Annual Salary",null,null,null,null,FieldWidth.Default,0,ColumnWidth.Calculated,0,true,true,true,AutoInterviewAction.Gray,"","",' ',0,MergeAlignment.Left,new ComputationScriptEvaluator<NumberValue>(Part_002Dtime_0020Annual_0020Salary_Script),Part_002Dtime_0020Annual_0020Salary_Sum);compDict.Add(item.Name, item as Component);return compDict;}}}namespace HotDocs.Server.Tmpl_Demo_0020Employment_0020Agreement_002Edocx.DataSources{}